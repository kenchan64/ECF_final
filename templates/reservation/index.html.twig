{% extends 'base.html.twig' %}

{% block title %}Reservation{% endblock %}

{% block body %}
    <div class="text-center">
        <h1 class="mt-5 underline-title">Réservation de table</h1>
        {{ form_start(form, {'method': 'POST', 'attr': {'id': 'my-form'}}) }}
        {% if app.flashes('danger') is not empty %}
            <div class="alert alert-danger">
                {{ app.flashes('danger')[0] }}
            </div>
        {% endif %}
        <div class="form-group text-center mx-auto mb-5 mt-5 " style="max-width: 600px;">
            {{ form_label(form.nbCouverts) }}
            {{ form_widget(form.nbCouverts) }}
        </div>
        <div class="form-group text-center mx-auto mb-5 mt-5" style="max-width: 600px;">
        {{ form_label(form.date) }}
        {{ form_widget(form.date) }}
    </div>
    <div class="form-group text-center mx-auto mb-5 mt-5" style="max-width: 600px;">
        {{ form_label(form.heure) }}
        {{ form_widget(form.heure) }}
    </div>
    <div class="form-group text-center mx-auto mb-5 mt-5" style="max-width: 600px;">
        {{ form_label(form.allergies) }}
        {{ form_widget(form.allergies) }}
    </div>
    <div class="text-center mb-5 mt-5">
        <button id='reservation_button' type="submit" class="btn btn-success">Réserver</button>
        <div id="availability-message"></div>
    </div>
    <input type="hidden" id="available" value="{{ available ? 'true' : 'false' }}" />
    <input type="hidden" id="remaining-seats" value="{{ remainingSeats|default('0') }}" />
    <input type="hidden" id="availability-changed" value="{{ availabilityChanged|default('0') }}" />
    {{ form_end(form) }}
    </div>

    <script>
        const form = document.getElementById('my-form');
        let initialAvailability = true;

        form.addEventListener('submit', function (event) {
            event.preventDefault(); // Annule l'action par défaut de la soumission du formulaire

            // Effectuez votre vérification ici
            // Si la vérification échoue, vous pouvez afficher un message d'erreur ou effectuer une autre action
            const nbCouverts = document.getElementById('reservation_nbCouverts').value;
            const heure = document.getElementById('reservation_heure').value;
            const date = document.getElementById('reservation_date').value;

            if (heure === '' || date === '' || nbCouverts === '') {
                // Afficher un message d'erreur ou effectuer une autre action
                // Par exemple, désactiver le bouton de soumission
                document.getElementById('reservation_button').disabled = true;
            } else {
                // Soumettre le formulaire programmatiquement
                checkAvailability();
            }
        });

        // Fonction pour vérifier la disponibilité des places en utilisant AJAX
        function checkAvailability() {

            const nbCouverts = document.getElementById('reservation_nbCouverts').value;
            const heure = document.getElementById('reservation_heure').value;
            const date = document.getElementById('reservation_date').value;
            const availableInput = document.getElementById('available');
            const available = availableInput.value;

            // Effectuer l'appel AJAX
            const url = '{{ path('app_reservation_check_availability') }}';
            const data = {
                'nbCouverts': nbCouverts,
                'heure': heure,
                'date': date,
                'available': available
            };

            fetch(url, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data),
            })
                .then(response => response.json())
                .then(data => {

                    // Mise à jour des variables globales avec les nouvelles valeurs de la réponse
                    const isAvailable = data['available'];
                    const remainingSeats = data['remainingSeats'];
                    const availabilityChanged = isAvailable !== initialAvailability;
                    initialAvailability = isAvailable;


                    // Mettre à jour l'affichage en fonction de la disponibilité des places
                    if (isAvailable && parseInt(remainingSeats) > 0) {
                        document.getElementById('availability-message').textContent = 'Places disponibles : ' + remainingSeats.toString();
                        document.getElementById('reservation_button').disabled = false;
                    } else {
                        // Places épuisées
                        document.getElementById('availability-message').textContent = 'Désolé, il n\'y a pas suffisamment de places disponibles à cette heure-là.';
                        // Désactiver le bouton de réservation si la limite est atteinte
                        document.getElementById('reservation_button').disabled = true;
                    }

                    // Rafraîchir la page si la disponibilité a changé
                    if (availabilityChanged) {
                        location.reload();
                    }
                })
                .catch(error => {
                    console.error('Error', error);
                });

        }
    </script>
{% endblock %}