{% extends 'base.html.twig' %}

{% block title %}Reservation{% endblock %}

{% block body %}
    <div class="text-center">
        <h1 class="mt-5 underline-title">Réservation de table</h1>
        {{ form_start(form, {'method': 'POST', 'attr': {'id': 'my-form'}}) }}
        {% for message in app.flashes('success') %}
            <div class="alert alert-success mx-auto text-center mb-5" style="width: 50%;">
                {{ message }}
            </div>
        {% endfor %}
        {% for message in app.flashes('danger') %}
            <div class="alert alert-danger mx-auto text-center mt-5" style="width: 50%;">
                {{ message }}
            </div>
        {% endfor %}
        <div class="form-group text-center mx-auto mb-5 mt-5 " style="max-width: 600px;">
            {{ form_label(form.nbCouverts) }}
            {{ form_widget(form.nbCouverts) }}
        </div>
        <div class="form-group text-center mx-auto mb-5 mt-5" style="max-width: 600px;">
            {{ form_label(form.date) }}
            {{ form_widget(form.date) }}
        </div>
        <div class="form-group text-center mx-auto mb-5 mt-5" style="max-width: 600px;">
            {{ form_label(form.allergies) }}
            {{ form_widget(form.allergies) }}
        </div>
        <div class="text-center mb-5 mt-5">
            <button id='reservation_button' type="submit" class="btn btn-success" data-url='/reservation'>Réserver
            </button>
        </div>
        {{ form_end(form) }}
        <p id="available_seats"></p>
    </div>
    {% block scripts %}
        <script>
            const form = document.getElementById('my-form');
            const availableSeats = document.getElementById('available_seats');

            const nbCouvertsInput = document.getElementById('reservation_nbCouverts');
            const dateInput = document.getElementById('reservation_date_date');
            const hourInput = document.getElementById('reservation_date_time_hour');
            const minuteInput = document.getElementById('reservation_date_time_minute');

            nbCouvertsInput.addEventListener('change', updateAvailableSeats);
            dateInput.addEventListener('change', updateAvailableSeats);
            hourInput.addEventListener('change', updateAvailableSeats);
            minuteInput.addEventListener('change', updateAvailableSeats);

            async function updateAvailableSeats() {
                const nbCouvertsValue = nbCouvertsInput.value;
                const dateValue = dateInput.value;
                const hourValue = hourInput.value;
                const minuteValue = minuteInput.value;
                const dateTimeValue = dateValue + ' ' + hourValue + ':' + minuteValue;

                if (dateTimeValue === '' || nbCouvertsValue === '') {
                    availableSeats.textContent = '';
                    return;
                }

                const response = await fetch('/reservation/seats', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        nbCouverts: nbCouvertsValue,
                        date: dateTimeValue
                    }),
                });

                const data = await response.json();
                if (data.error) {
                    console.error('Error:', data.error);
                } else {
                    const totalSeats = data.totalSeats;
                    availableSeats.textContent = `${data.availableSeats} places disponibles sur ${totalSeats}`;
                }
            }
        </script>
    {% endblock %}
{% endblock %}